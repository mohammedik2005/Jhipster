/**
 * Generated by JHipster IDE plugin
 */
entity AssessorPrinciples {
	nameAr String required
	nameEn String required
	descriptionAr String
	descriptionEn String
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}
entity AssessorDomain {
	nameAr String required
	nameEn String required
	descriptionAr String
	descriptionEn String
	code String
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}


entity AssessorControl {
	code String
	nameAr String required
	nameEn String required
	descriptionAr String
	descriptionEn String
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}

entity AssessorControlPriority {
	nameAr String required
	nameEn String required
	code String
	order Integer
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}

entity AssessorControlCategory {
	categoryAr String required
	categoryEn String required
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}

entity AssessorCompliance {
	code String
	descriptionAr String
	descriptionEn String
	complianceVersion Integer
	version Long
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}

entity AssessorComplianceValues {
	ownership String
	justification String
	isCompleted Integer	
	evidenceName String
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}

entity AssessorComplianceSchedule {
	text String required
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}

entity AssessorAssessmentSchedule {
	fromDate ZonedDateTime
	toDate ZonedDateTime
	descriptionAr String
	descriptionEn String
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}

entity AssessorComplianceEvidenceType {
	nameAr String required
	nameEn String required
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}

entity AssessorComplianceEvidenceNote {
	text TextBlob
}

entity AssessorComplianceEvidenceStatus {
	nameAr String required
	nameEn String required
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}

entity AssessorAttachment {
	description String
	extension String
	generatedName String
	isActive  Integer
	mimeType String
	originalName String
	tableName String
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}

entity AssessorComplianceStatus {
	statusAr String required
	statusEn String required
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}

entity AssessorComplianceFlag {
	nameAr String required
	nameEn String required
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}

entity AssessorApplicant {
	name String
	code String
	personName String
	jobTitle String
	department String
	email String
	phone String
	phoneExt String
	contactPerson String
	contactPhone String
	contactEmail String
	createdDate ZonedDateTime
	createdBy String
	modifiedDate ZonedDateTime
	modifiedBy String
}

relationship OneToMany {
	AssessorPrinciples{domains} to AssessorDomain{principle},
    AssessorControl{domains} to AssessorDomain{control},
    AssessorControl{compliances} to AssessorCompliance{control},
    AssessorComplianceFlag{compliances} to AssessorCompliance{complianceFlag},
    AssessorComplianceStatus {values} to AssessorComplianceValues{complianceStatus},
    AssessorComplianceSchedule{values} to AssessorComplianceValues{complianceSchedule},
    AssessorComplianceEvidenceType{values} to AssessorComplianceValues{evidenceType},
    AssessorComplianceEvidenceStatus{values} to AssessorComplianceValues{evidenceStatus},
    AssessorControlPriority{controls} to  AssessorControl{priority}
}

relationship ManyToMany {
	AssessorDomain{attachments} to AssessorAttachment{domains},
    AssessorComplianceValues{attachments} to AssessorAttachment{values},
    AssessorControl{attachments} to AssessorAttachment{controls},
    AssessorApplicant{values} to AssessorComplianceValues{applicants},
    AssessorCompliance{values} to AssessorComplianceValues{compliance},
    AssessorComplianceEvidenceNote{values} to AssessorComplianceValues{notes},
    AssessorControlCategory{controls} to AssessorControl{categories},
    AssessorAssessmentSchedule{schedules} to AssessorComplianceSchedule{assessments}
}

dto * with mapstruct
paginate all with pagination
// Set service options to all except few
service all with serviceImpl
// Set an angular suffix
angularSuffix * with assess